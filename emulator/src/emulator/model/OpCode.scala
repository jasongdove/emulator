package emulator.model

case class OpCode(code: Int, instruction: Instruction, bytes: Int, cycles: Int, addressingMode: Option[AddressingMode])

object OpCode {
  val opCodes: Map[Int, OpCode] = List(
    OpCode(0x69, Instruction.ADC, 2, 2, Some(AddressingMode.Immediate)),
    OpCode(0x65, Instruction.ADC, 2, 3, Some(AddressingMode.ZeroPage)),
    OpCode(0x75, Instruction.ADC, 2, 4, Some(AddressingMode.ZeroPageX)),
    OpCode(0x6d, Instruction.ADC, 3, 4, Some(AddressingMode.Absolute)),
    OpCode(0x7d, Instruction.ADC, 3, 4, Some(AddressingMode.AbsoluteX)),
    OpCode(0x79, Instruction.ADC, 3, 4, Some(AddressingMode.AbsoluteY)),
    OpCode(0x61, Instruction.ADC, 2, 6, Some(AddressingMode.IndirectX)),
    OpCode(0x71, Instruction.ADC, 2, 5, Some(AddressingMode.IndirectY)),
    OpCode(0x29, Instruction.AND, 2, 2, Some(AddressingMode.Immediate)),
    OpCode(0x25, Instruction.AND, 2, 3, Some(AddressingMode.ZeroPage)),
    OpCode(0x35, Instruction.AND, 2, 4, Some(AddressingMode.ZeroPageX)),
    OpCode(0x2d, Instruction.AND, 3, 4, Some(AddressingMode.Absolute)),
    OpCode(0x3d, Instruction.AND, 3, 4, Some(AddressingMode.AbsoluteX)),
    OpCode(0x39, Instruction.AND, 3, 4, Some(AddressingMode.AbsoluteY)),
    OpCode(0x21, Instruction.AND, 2, 6, Some(AddressingMode.IndirectX)),
    OpCode(0x31, Instruction.AND, 2, 5, Some(AddressingMode.IndirectY)),
    OpCode(0x90, Instruction.BCC, 2, 2, None),
    OpCode(0xb0, Instruction.BCS, 2, 2, None),
    OpCode(0xf0, Instruction.BEQ, 2, 2, None),
    OpCode(0xd0, Instruction.BNE, 2, 2, None),
    OpCode(0x10, Instruction.BPL, 2, 2, None),
    OpCode(0x00, Instruction.BRK, 1, 7, None),
    OpCode(0x18, Instruction.CLC, 1, 2, None),
    OpCode(0xc9, Instruction.CMP, 2, 2, Some(AddressingMode.Immediate)),
    OpCode(0xc5, Instruction.CMP, 2, 3, Some(AddressingMode.ZeroPage)),
    OpCode(0xd5, Instruction.CMP, 2, 4, Some(AddressingMode.ZeroPageX)),
    OpCode(0xcd, Instruction.CMP, 3, 4, Some(AddressingMode.Absolute)),
    OpCode(0xdd, Instruction.CMP, 3, 4, Some(AddressingMode.AbsoluteX)),
    OpCode(0xd9, Instruction.CMP, 3, 4, Some(AddressingMode.AbsoluteY)),
    OpCode(0xc1, Instruction.CMP, 2, 6, Some(AddressingMode.IndirectX)),
    OpCode(0xd1, Instruction.CMP, 2, 5, Some(AddressingMode.IndirectY)),
    OpCode(0xe0, Instruction.CPX, 2, 2, Some(AddressingMode.Immediate)),
    OpCode(0xe4, Instruction.CPX, 2, 3, Some(AddressingMode.ZeroPage)),
    OpCode(0xec, Instruction.CPX, 3, 4, Some(AddressingMode.Absolute)),
    OpCode(0xc6, Instruction.DEC, 2, 5, Some(AddressingMode.ZeroPage)),
    OpCode(0xd6, Instruction.DEC, 2, 6, Some(AddressingMode.ZeroPageX)),
    OpCode(0xce, Instruction.DEC, 3, 6, Some(AddressingMode.Absolute)),
    OpCode(0xde, Instruction.DEC, 3, 7, Some(AddressingMode.AbsoluteX)),
    OpCode(0xca, Instruction.DEX, 1, 2, None),
    OpCode(0xe8, Instruction.INX, 1, 2, None),
    OpCode(0x4c, Instruction.JMP, 3, 3, Some(AddressingMode.Absolute)),
    OpCode(0x6c, Instruction.JMP, 3, 5, Some(AddressingMode.Indirect)),
    OpCode(0x20, Instruction.JSR, 3, 6, Some(AddressingMode.Absolute)),
    OpCode(0xa9, Instruction.LDA, 2, 2, Some(AddressingMode.Immediate)),
    OpCode(0xa5, Instruction.LDA, 2, 3, Some(AddressingMode.ZeroPage)),
    OpCode(0xb5, Instruction.LDA, 2, 4, Some(AddressingMode.ZeroPageX)),
    OpCode(0xad, Instruction.LDA, 3, 4, Some(AddressingMode.Absolute)),
    OpCode(0xbd, Instruction.LDA, 3, 4, Some(AddressingMode.AbsoluteX)),
    OpCode(0xb9, Instruction.LDA, 3, 4, Some(AddressingMode.AbsoluteY)),
    OpCode(0xa1, Instruction.LDA, 2, 6, Some(AddressingMode.IndirectX)),
    OpCode(0xb1, Instruction.LDA, 2, 5, Some(AddressingMode.IndirectY)),
    OpCode(0xa2, Instruction.LDX, 2, 2, Some(AddressingMode.Immediate)),
    OpCode(0xa6, Instruction.LDX, 2, 3, Some(AddressingMode.ZeroPage)),
    OpCode(0xb6, Instruction.LDX, 2, 4, Some(AddressingMode.ZeroPageY)),
    OpCode(0xae, Instruction.LDX, 3, 4, Some(AddressingMode.Absolute)),
    OpCode(0xbe, Instruction.LDX, 3, 4, Some(AddressingMode.AbsoluteY)),
    OpCode(0xa0, Instruction.LDY, 2, 2, Some(AddressingMode.Immediate)),
    OpCode(0xa4, Instruction.LDY, 2, 3, Some(AddressingMode.ZeroPage)),
    OpCode(0xb4, Instruction.LDY, 2, 4, Some(AddressingMode.ZeroPageX)),
    OpCode(0xac, Instruction.LDY, 3, 4, Some(AddressingMode.Absolute)),
    OpCode(0xbc, Instruction.LDY, 3, 4, Some(AddressingMode.AbsoluteX)),
    OpCode(0x4a, Instruction.LSR_A, 1, 2, None),
    OpCode(0x46, Instruction.LSR, 2, 5, Some(AddressingMode.ZeroPage)),
    OpCode(0x56, Instruction.LSR, 2, 6, Some(AddressingMode.ZeroPageX)),
    OpCode(0x4e, Instruction.LSR, 3, 6, Some(AddressingMode.Absolute)),
    OpCode(0x5e, Instruction.LSR, 3, 7, Some(AddressingMode.AbsoluteX)),
    OpCode(0xea, Instruction.NOP, 1, 2, None),
    OpCode(0x60, Instruction.RTS, 1, 6, None),
    OpCode(0xe9, Instruction.SBC, 2, 2, Some(AddressingMode.Immediate)),
    OpCode(0xe5, Instruction.SBC, 2, 3, Some(AddressingMode.ZeroPage)),
    OpCode(0xf5, Instruction.SBC, 2, 4, Some(AddressingMode.ZeroPageX)),
    OpCode(0xed, Instruction.SBC, 3, 4, Some(AddressingMode.Absolute)),
    OpCode(0xfd, Instruction.SBC, 3, 4, Some(AddressingMode.AbsoluteX)),
    OpCode(0xf9, Instruction.SBC, 3, 4, Some(AddressingMode.AbsoluteY)),
    OpCode(0xe1, Instruction.SBC, 2, 6, Some(AddressingMode.IndirectX)),
    OpCode(0xf1, Instruction.SBC, 2, 5, Some(AddressingMode.IndirectY)),
    OpCode(0x38, Instruction.SEC, 1, 2, None),
    OpCode(0x85, Instruction.STA, 2, 3, Some(AddressingMode.ZeroPage)),
    OpCode(0x95, Instruction.STA, 2, 4, Some(AddressingMode.ZeroPageX)),
    OpCode(0x8d, Instruction.STA, 3, 4, Some(AddressingMode.Absolute)),
    OpCode(0x9d, Instruction.STA, 3, 5, Some(AddressingMode.AbsoluteX)),
    OpCode(0x99, Instruction.STA, 3, 5, Some(AddressingMode.AbsoluteY)),
    OpCode(0x81, Instruction.STA, 2, 6, Some(AddressingMode.IndirectX)),
    OpCode(0x91, Instruction.STA, 2, 6, Some(AddressingMode.IndirectY)),
    OpCode(0xaa, Instruction.TAX, 1, 2, None),
    OpCode(0x8a, Instruction.TXA, 1, 2, None)
  ).map(opcode => opcode.code -> opcode).toMap
}
